from f1pystats.f1pystats import get
import json
from datetime import datetime, timedelta
from gcalmanager.gcalmanager import GCalManager

calendar_id = "6e3bb49212028b8b11b56eadb360c25c9d227eb529cee014d9bbd0075f1561ef@group.calendar.google.com"

def parse(data):
    cal_events = []
    for it in data:
        gp_name = it["raceName"][:-11] + " GP"
        print(gp_name)
        # Race event
        race_event = {}
        race_event["title"] = "Race - " + gp_name
        race_event["date"] = it["date"]
        race_event["start_time"] = it["time"]
        race_event["end_time"] = add_time(it["time"], 2)

        # Qualy event
        qualy_event = {}
        qualy_event["title"] = "Qualy - " + gp_name
        qualy_event["date"] = it["Qualifying"]["date"]
        qualy_event["start_time"] = it["Qualifying"]["time"]
        qualy_event["end_time"] = add_time(it["Qualifying"]["time"], 1)

        cal_events.append(race_event)
        cal_events.append(qualy_event)

        # Sprint event
        if "Sprint" in it:
            sprint_event = {}
            sprint_event["title"] = "Sprint - " + gp_name
            sprint_event["date"] = it["Sprint"]["date"]
            sprint_event["start_time"] = it["Sprint"]["time"]
            sprint_event["end_time"] = add_time(it["Sprint"]["time"], 1)
            cal_events.append(sprint_event)


    return cal_events

# code generated by ChatGPT
def add_time(time_str, delta):
    # Parse the time string into a datetime object
    time = datetime.strptime(time_str, '%H:%M')
    # Add the delta to the time using a timedelta object
    time += timedelta(hours=delta)
    # Format the resulting time back into a string
    return time.strftime('%H:%M')

if __name__ == "__main__":
    gcal = GCalManager(calendar_id)

    f = open("2023_schedule.json", "r")
    data = json.loads(f.read())
    events = parse(data)

    for it in events:
        print("")
        print("---")
        print(f"Title: {it['title']}")
        print(f"Date: {it['date']}")
        print(f"Start time: {it['start_time']}")
        print(f"End time: {it['end_time']}")
        gcal.create_event(it["title"], "", it["start_time"], it["end_time"], it["date"])

